{"version":3,"file":"static/js/67.6956d83e.chunk.js","mappings":"iTAEO,SAAeA,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAMC,GAAvC,uFACkBC,EAAAA,EAAAA,IAAA,iEAAoEF,GAAQC,GAD9F,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA8BC,EAAIN,GAAlC,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,GAAMN,GADxE,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,WAAyBD,EAAIN,GAA7B,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,YAA8DN,GADhF,cACCE,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BH,EAAIN,GAAhC,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,YAA8DN,GADhF,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeO,EAAtB,mDAAO,OAAP,oBAAO,WAA+BC,EAAOZ,EAAMC,GAA5C,uFACkBC,EAAAA,EAAAA,IAAA,0DAA6DU,EAA7D,iBAA2EZ,GAAQC,GADrG,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE,sECrBMQ,E,QAASC,GAAAA,IAAH,8F,SCANC,EAAW,WACpB,OACI,SAACF,EAAD,UAAQ,2CAEf,C,sKCJYG,EAAOF,EAAAA,GAAAA,GAAH,uHAOJG,EAAOH,EAAAA,GAAAA,GAAH,2IAQJD,EAASC,EAAAA,GAAAA,IAAH,2E,SCfNI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OAAuB,IAAnBA,EAAQC,QAEJ,SAACP,EAAD,UAAQ,kDAMZ,SAACG,EAAD,UACKG,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAAShB,EAAS,EAATA,GAC7B,OACI,UAACU,EAAD,YACI,0BAAI,WAASK,MACb,uBAAIC,MAFGhB,EAKlB,KAGZ,E,UCfc,SAASiB,IACpB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBACjBhC,EAAU,CAChBiC,QAAS,CACTC,OAAQ,mBACAC,cAAe,8NAEnBC,OAAQL,EAAWK,QAPX,wCASZ,oGAEQP,GAAS,GAFjB,UAGqCpB,EAAAA,EAAAA,IAAae,EAAOa,QAASrC,GAHlE,OAGcsC,EAHd,OAIQX,EAAWW,GAJnB,gDAM2B,iBAAf,KAAMC,MACNV,GAAS,GAPrB,0DATY,sBAsBZ,OAtBY,mCAoBZW,GAEO,WACHT,EAAWU,OACd,CACJ,GAAE,CAACjB,EAAOa,WAGP,2BACKT,IAAU,SAAC,IAAD,IACVV,IAAY,SAACD,EAAD,CAAaC,QAASA,EAAQd,YAGtD,C","sources":["Api.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport async function fetchTrandingList(page, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/trending//movie/week?page=${page}`, options );\n  return response.data.results;\n  \n};\n\nexport async function fetchMovieById(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, options);\n  return response.data;\n};\n\nexport async function fetchCast(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, options);\n  return response.data.cast;\n};\n\nexport async function fetchReviews(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, options);\n  return response.data;\n};\n\nexport async function fetchSearchList(query, page, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&page=${page}`, options);\n  return response.data.results;\n};","import styled from \"styled-components\";\n\nexport const ErrMsg = styled.div`\nmargin: 10px auto;\ncolor: red;\nfont-size: 22px;\nfont-weight: 700;\n`","import { ErrMsg } from \"./ErrorMessage.styled\"\n\nexport const ErrorMsg = () => {\n    return (\n        <ErrMsg>Whoops! Error! Please reload this page!</ErrMsg>\n    )\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nmargin-top: 20px;\npadding-bottom: 20px;\n`\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nborder: 1px solid black;\nborder-radius: 8px;\npadding: 5px;\n`\nexport const ErrMsg = styled.div`\nmargin-top: 20px;\ncolor: red;\nfont-weight: 700;\n`","import { List, Item, ErrMsg } from \"./ReviewsList.styled\";\n\nexport const ReviewsList = ({ reviews }) => {\n    if (reviews.length === 0) {\n        return (\n            <ErrMsg>\n                Does not have any reviews for this movie yet\n            </ErrMsg>\n        )\n    };\n    return (\n        <List>\n            {reviews.map(({ author, content, id }) => {\n                return (\n                    <Item key={id}>\n                        <h2>Author: {author}</h2>\n                        <p>{content}</p>\n                    </Item>\n                )\n            })}\n        </List>\n    );  \n};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchReviews } from \"Api\";\nimport { ReviewsList } from \"components/ReviewsList/ReviewsList\";\nimport { ErrorMsg } from \"components/ErrorMessage/ErrorMessage\";\n\n\nexport default function Reviews() {\n    const params = useParams();\n    const [reviews, setReviews] = useState();\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const options = {\n        headers: {\n        accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNjcxYWI2NDE1ZTQzMmI4NzliOWYyZGExZmVmNzMzNiIsInN1YiI6IjY0ZjczOTllZmZjOWRlMDBhYzRmMTg5MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KxoO5UBzcSO6Jwoana0Pbke2nBChrIK0Dhb7VVA5Bbw'\n            },\n            signal: controller.signal\n        };\n        async function getReviews() {\n            try {\n                setError(false);\n                const fetchedReviews = await fetchReviews(params.movieId, options);\n                setReviews(fetchedReviews);\n            } catch (error) {\n                if (error.code !== 'ERR_CANCELED') {\n                    setError(true)\n                }\n            } \n        };\n        getReviews();\n        \n        return () => {\n            controller.abort();\n        }\n    }, [params.movieId]);\n\n    return (\n        <div>\n            {error && (<ErrorMsg />)}\n            {reviews && (<ReviewsList reviews={reviews.results} />)}\n        </div>\n    );\n};"],"names":["fetchTrandingList","page","options","axios","response","data","results","fetchMovieById","id","fetchCast","cast","fetchReviews","fetchSearchList","query","ErrMsg","styled","ErrorMsg","List","Item","ReviewsList","reviews","length","map","author","content","Reviews","params","useParams","useState","setReviews","error","setError","useEffect","controller","AbortController","headers","accept","Authorization","signal","movieId","fetchedReviews","code","getReviews","abort"],"sourceRoot":""}