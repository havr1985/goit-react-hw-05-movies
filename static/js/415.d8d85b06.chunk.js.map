{"version":3,"file":"static/js/415.d8d85b06.chunk.js","mappings":"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","sources":["Api.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/LoadMore/LoadMore.styled.js","components/LoadMore/LoadMore.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport async function fetchTrandingList(page, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/trending//movie/week?page=${page}`, options );\n  return response.data.results;\n  \n};\n\nexport async function fetchMovieById(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, options);\n  return response.data;\n};\n\nexport async function fetchCast(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, options);\n  return response.data.cast;\n};\n\nexport async function fetchReviews(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, options);\n  return response.data;\n};\n\nexport async function fetchSearchList(query, page, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&page=${page}`, options);\n  return response.data.results;\n};","import styled from \"styled-components\";\n\nexport const ErrMsg = styled.div`\nmargin: 10px auto;\ncolor: red;\nfont-size: 22px;\nfont-weight: 700;\n`","import { ErrMsg } from \"./ErrorMessage.styled\"\n\nexport const ErrorMsg = () => {\n    return (\n        <ErrMsg>Whoops! Error! Please reload this page!</ErrMsg>\n    )\n}","import styled from \"styled-components\";\n\nexport const BtnWrap = styled.div`\ndisplay: block;\ntext-align: center;\nmargin-top: 20px;\nmargin-bottom: 20px;\n`\nexport const Btn = styled.button`\nborder: 0;\nborder: 1px solid black;\nborder-radius: 8px;\npadding: 8px 16px;\nborder-radius: 2px;\nbackground-color: white;\ntransition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntext-align: center;\nfont-size: 18px;\nline-height: 24px;\nfont-style: normal;\nfont-weight: 500;\nmin-width: 180px;\n\n&:hover{\n    background-color: black;\n    color: white;\n}\n`","import { BtnWrap, Btn } from \"./LoadMore.styled\";\n\nexport const LoadMore = ({ onClick }) => {\n    return (\n        <BtnWrap>\n            <Btn type=\"button\" onClick={onClick}>Load more</Btn>\n        </BtnWrap>\n    )\n\n};","import styled from \"styled-components\";\n\nexport const Item = styled.li`\nwidth: 200px;\nborder: 1px solid black;\nborder-radius: 8px;\nbackground-color: white;\n&:hover{\n    transform: translateY(-5px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\n}\n`\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\ngap: 20px;\nmargin-top: 30px;\n`","import styled from \"styled-components\";\n\nexport const CardWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nalign-items: center;\n`\nexport const Img = styled.img`\nwidth: 200px;\nheight: 300px;\nborder-top-left-radius: 8px;\nborder-top-right-radius: 8px;\n`\nexport const TitleMovie = styled.p`\npadding-bottom: 10px;\ncolor: black;\nfont-weight: 700;\ntext-align: center;\n`","import { Link, useLocation } from \"react-router-dom\";\nimport { CardWrap, Img, TitleMovie } from \"./MoviesItem.styled\";\n\nexport const MoviesItem = ({ movie: { original_title, poster_path, id } }) => {\n    const location = useLocation();\n    let url = '';\n    if (poster_path) {\n        url = `https://image.tmdb.org/t/p/w200/${poster_path}`;\n    } else {\n        url = 'https://ranobehub.org/img/ranobe/posters/default.jpg'\n    }\n    return (\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n            <CardWrap>\n                <Img src={url} alt={original_title} />\n                <TitleMovie>{original_title}</TitleMovie>\n            </CardWrap>\n        </Link>\n    );\n};","import { Item, List } from \"./MoviesList.styled\";\nimport { MoviesItem } from \"../MoviesItem/MoviesItem\";\n\nexport const MoviesList = ({ movies }) => {\n    return (\n        <List>\n            {movies.map(movie => (\n                <Item key={movie.id}>\n                    <MoviesItem movie={movie} />\n                </Item>\n            ))}\n        </List>\n    );\n};","import { fetchTrandingList } from \"Api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { LoadMore } from \"components/LoadMore/LoadMore\";\nimport { ErrorMsg } from \"components/ErrorMessage/ErrorMessage\";\n \nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [error, setError] = useState(false);\n\n    const handleLoadMore = () => {\n        setPage(prevState => prevState + 1);\n    };\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const options = {\n        headers: {\n        accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNjcxYWI2NDE1ZTQzMmI4NzliOWYyZGExZmVmNzMzNiIsInN1YiI6IjY0ZjczOTllZmZjOWRlMDBhYzRmMTg5MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KxoO5UBzcSO6Jwoana0Pbke2nBChrIK0Dhb7VVA5Bbw'\n            },\n            signal: controller.signal\n        };\n\n        async function getMoviesLIst() {\n            try {\n                setError(false);\n                const moviesData = await fetchTrandingList(page, options);\n                setMovies(prevState => ([...prevState, ...moviesData]));\n            } catch (error) {\n                if (error.code !== 'ERR_CANCELED') {\n                    setError(true);\n                };\n            }\n        };\n        getMoviesLIst();\n        return () => {\n            controller.abort();\n        }\n    }, [page]);\n\n    return (\n        <main>\n            {error && (<ErrorMsg />)}\n            <MoviesList movies={movies} />\n            {movies.length > 0 && <LoadMore onClick={handleLoadMore} />}\n        </main>\n    );\n};"],"names":["fetchTrandingList","page","options","axios","response","data","results","fetchMovieById","id","fetchCast","cast","fetchReviews","fetchSearchList","query","ErrMsg","styled","ErrorMsg","BtnWrap","Btn","LoadMore","onClick","type","Item","List","CardWrap","Img","TitleMovie","MoviesItem","movie","original_title","poster_path","location","useLocation","url","to","state","from","src","alt","MoviesList","movies","map","Home","useState","setMovies","setPage","error","setError","useEffect","controller","AbortController","headers","accept","Authorization","signal","moviesData","prevState","code","getMoviesLIst","abort","length"],"sourceRoot":""}