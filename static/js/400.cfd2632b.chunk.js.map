{"version":3,"file":"static/js/400.cfd2632b.chunk.js","mappings":"kTAEO,SAAeA,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAMC,GAAvC,uFACkBC,EAAAA,EAAAA,IAAA,iEAAoEF,GAAQC,GAD9F,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA8BC,EAAIN,GAAlC,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,GAAMN,GADxE,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,WAAyBD,EAAIN,GAA7B,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,YAA8DN,GADhF,cACCE,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BH,EAAIN,GAAhC,uFACkBC,EAAAA,EAAAA,IAAA,6CAAgDK,EAAhD,YAA8DN,GADhF,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeO,EAAtB,mDAAO,OAAP,oBAAO,WAA+BC,EAAOZ,EAAMC,GAA5C,uFACkBC,EAAAA,EAAAA,IAAA,0DAA6DU,EAA7D,iBAA2EZ,GAAQC,GADrG,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE,0KCrBMQ,EAAOC,EAAAA,GAAAA,GAAH,gHAOJC,EAAOD,EAAAA,GAAAA,GAAH,sFAKJE,EAAMF,EAAAA,GAAAA,IAAH,qGAKHG,EAAWH,EAAAA,GAAAA,IAAH,iHAORI,EAAOJ,EAAAA,GAAAA,KAAH,2C,SCxBJK,EAAW,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACvB,OACI,SAACI,EAAD,UACKJ,EAAKW,KAAI,YAA0D,IAAvDC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC7CC,EAAM,GAOV,OALIA,EADAF,EACG,0CAAsCA,GAEnC,wDAIN,UAACR,EAAD,YACI,SAACC,EAAD,CAAKU,IAAKD,EAAKE,IAAKN,KACpB,UAACJ,EAAD,YACI,yBAAG,UAAM,SAACC,EAAD,UAAOG,IAAqB,QACrC,yBAAG,eAAW,SAACH,EAAD,UAAOI,YAJlBE,EAQlB,KAGZ,E,UCnBc,SAASI,IACpB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,YAAxB,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBACjBpC,EAAU,CAChBqC,QAAS,CACTC,OAAQ,mBACAC,cAAe,8NAEnBC,OAAQL,EAAWK,QAPX,wCASZ,oGAEQP,GAAS,GAFjB,UAGkC1B,EAAAA,EAAAA,GAAUqB,EAAOa,QAASzC,GAH5D,OAGc0C,EAHd,OAIQX,EAAQW,GAJhB,gDAM2B,iBAAf,KAAMC,MACNV,GAAS,GAPrB,0DATY,sBAsBZ,OAtBY,mCAoBZW,GAEO,WACHT,EAAWU,OACd,CACJ,GAAE,CAACjB,EAAOa,WAGP,2BACKT,IAAU,SAAC,IAAD,IACVxB,IAAS,SAACU,EAAD,CAAUV,KAAMA,MAGrC,C,sEC1CYsC,E,QAASjC,GAAAA,IAAH,8F,SCANkC,EAAW,WACpB,OACI,SAACD,EAAD,UAAQ,2CAEf,C","sources":["Api.jsx","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport async function fetchTrandingList(page, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/trending//movie/week?page=${page}`, options );\n  return response.data.results;\n  \n};\n\nexport async function fetchMovieById(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, options);\n  return response.data;\n};\n\nexport async function fetchCast(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, options);\n  return response.data.cast;\n};\n\nexport async function fetchReviews(id, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, options);\n  return response.data;\n};\n\nexport async function fetchSearchList(query, page, options) {\n  const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&page=${page}`, options);\n  return response.data.results;\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 10px;\nmargin-top: 20px;\npadding-bottom: 20px;\n`\nexport const Item = styled.li`\nwidth: 200px;\nborder: 1px solid black;\nborder-radius: 8px;\n`\nexport const Img = styled.img`\nheight: 300px;\nborder-top-left-radius: 8px;\nborder-top-right-radius: 8px;\n`\nexport const TextWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nalign-items: start;\npadding: 5px;\n`\nexport const Text = styled.span`\nfont-weight: 700;\n`","import { List, Item, Img, TextWrap, Text } from \"./CastList.styled\";\n\nexport const CastList = ({ cast }) => {\n    return (\n        <List>\n            {cast.map(({ original_name, character, profile_path, cast_id }) => {\n                let url = \"\";\n                if (profile_path) {\n                    url = `https://image.tmdb.org/t/p/w200/${profile_path}`;\n                } else {\n                    url = 'https://ranobehub.org/img/ranobe/posters/default.jpg'\n                };\n                \n                return (\n                    <Item key={cast_id}>\n                        <Img src={url} alt={original_name} />\n                        <TextWrap>\n                            <p>NAME: <Text>{original_name}</Text> </p>\n                            <p>CHARACTER: <Text>{character}</Text></p>\n                        </TextWrap>\n                    </Item>\n                )\n            })}\n        </List>\n    );\n};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCast } from \"Api\";\nimport { CastList } from \"components/CastList/CastList\";\nimport { ErrorMsg } from \"components/ErrorMessage/ErrorMessage\";\n\nexport default function Cast() {\n    const params = useParams();\n    const [cast, setCast] = useState();\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const options = {\n        headers: {\n        accept: 'application/json',\n                Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNjcxYWI2NDE1ZTQzMmI4NzliOWYyZGExZmVmNzMzNiIsInN1YiI6IjY0ZjczOTllZmZjOWRlMDBhYzRmMTg5MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KxoO5UBzcSO6Jwoana0Pbke2nBChrIK0Dhb7VVA5Bbw'\n            },\n            signal: controller.signal\n        };\n        async function getCast() {\n            try {\n                setError(false);\n                const fetchedCast = await fetchCast(params.movieId, options);\n                setCast(fetchedCast);\n            } catch (error) {\n                if (error.code !== 'ERR_CANCELED') {\n                    setError(true)\n                }\n            }\n        };\n        getCast();\n        \n        return () => {\n            controller.abort();\n        }\n    }, [params.movieId]);\n\n    return (\n        <div>\n            {error && (<ErrorMsg />)}\n            {cast && (<CastList cast={cast} />)}\n        </div>\n    );\n};","import styled from \"styled-components\";\n\nexport const ErrMsg = styled.div`\nmargin: 10px auto;\ncolor: red;\nfont-size: 22px;\nfont-weight: 700;\n`","import { ErrMsg } from \"./ErrorMessage.styled\"\n\nexport const ErrorMsg = () => {\n    return (\n        <ErrMsg>Whoops! Error! Please reload this page!</ErrMsg>\n    )\n}"],"names":["fetchTrandingList","page","options","axios","response","data","results","fetchMovieById","id","fetchCast","cast","fetchReviews","fetchSearchList","query","List","styled","Item","Img","TextWrap","Text","CastList","map","original_name","character","profile_path","cast_id","url","src","alt","Cast","params","useParams","useState","setCast","error","setError","useEffect","controller","AbortController","headers","accept","Authorization","signal","movieId","fetchedCast","code","getCast","abort","ErrMsg","ErrorMsg"],"sourceRoot":""}